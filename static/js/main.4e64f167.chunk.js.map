{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","_ref","id","fetchedUser","_useState","useState","_useState2","Object","slicedToArray","counter","setCounter","react_default","a","createElement","Panel_default","PanelHeader_default","Group_default","title","Cell_default","before","photo_200","Avatar_default","src","description","city","concat","first_name","last_name","Div_default","Button_default","onClick","size","mode","align","App","activePanel","_useState3","_useState4","setUser","_useState5","ScreenSpinner_default","_useState6","popout","setPopout","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","user","wrap","_context","prev","next","bridge","send","sent","stop","apply","this","arguments","subscribe","_ref$detail","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","View_default","panels_Home","ReactDOM","render","src_App","getElementById"],"mappings":"uZAmDeA,UAxCF,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,GAAIC,EAAiBF,EAAjBE,YAAiBC,EACLC,mBAAS,GADJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC5BK,EAD4BH,EAAA,GACnBI,EADmBJ,EAAA,GAGnC,OACCK,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAOV,GAAIA,GACVS,EAAAC,EAAAC,cAACE,EAAAH,EAAD,gBACCT,GACDQ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAOK,MAAM,oCACZN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACCO,OAAQhB,EAAYiB,UAAYT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAQU,IAAKnB,EAAYiB,YAAe,KACxEG,YAAapB,EAAYqB,MAAQrB,EAAYqB,KAAKP,MAAQd,EAAYqB,KAAKP,MAAQ,IAFpF,GAAAQ,OAIKtB,EAAYuB,WAJjB,KAAAD,OAI+BtB,EAAYwB,aAI5ChB,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAOK,MAAM,sBACZN,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,KACCD,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAQkB,QAAS,WAAOpB,EAAWD,EAAU,IAAKsB,KAAK,KAAKC,KAAK,UAAUC,MAAM,UAAjF,cCKUC,EA3BH,WAAM,IAAA9B,EACqBC,mBAAS,QAD9BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACV+B,EADU7B,EAAA,GAAA8B,GAAA9B,EAAA,GAEcD,mBAAS,OAFvBgC,EAAA9B,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,GAEVjC,EAFUkC,EAAA,GAEGC,EAFHD,EAAA,GAAAE,EAGWlC,mBAASM,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAAemB,KAAK,WAHxCU,EAAAlC,OAAAC,EAAA,EAAAD,CAAAgC,EAAA,GAGVG,EAHUD,EAAA,GAGFE,EAHEF,EAAA,GAoBlB,OAfCG,oBAAU,WAAM,SAAAC,IAAA,OAAAA,EAAAtC,OAAAuC,EAAA,EAAAvC,CAAAwC,EAAAnC,EAAAoC,KAQf,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAnC,EAAAuC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoBC,IAAOC,KAAK,uBADhC,OACON,EADPE,EAAAK,KAECnB,EAAQY,GACRP,EAAU,MAHX,wBAAAS,EAAAM,SAAAT,OAReU,MAAAC,KAAAC,WACfN,IAAOO,UAAU,SAAA7D,GAA+B,IAAA8D,EAAA9D,EAA5B+D,OAAUC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,MALzB,WAAAtB,EAAAc,MAAAC,KAAAC,WAafc,IACE,IAEFhE,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMuB,YAAaA,EAAaO,OAAQA,GACvC/B,EAAAC,EAAAC,cAACgE,EAAD,CAAM3E,GAAG,OAAOC,YAAaA,MCtBhCoD,IAAOC,KAAK,gBAEZsB,IAASC,OAAOpE,EAAAC,EAAAC,cAACmE,EAAD,MAASZ,SAASa,eAAe","file":"static/js/main.4e64f167.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport {PanelHeaderBack, PanelHeaderButton} from \"@vkontakte/vkui\";\n\nconst Home = ({id, fetchedUser}) => {\n\tconst [counter, setCounter] = useState(0)\n\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t<PanelHeader>VK Coin</PanelHeader>\n\t\t\t{fetchedUser &&\n\t\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t</Group>}\n\n\t\t\t<Group title=\"Navigation Example\">\n\t\t\t\t<Div>\n\t\t\t\t\t<h1>{counter}</h1>\n\t\t\t\t\t<Button onClick={() => {setCounter(counter + 1)}} size=\"xl\" mode=\"primary\" align=\"center\">\n\t\t\t\t\t\tClick\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Group>\n\t\t</Panel>\n\t);\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\nreturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser}/>\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}